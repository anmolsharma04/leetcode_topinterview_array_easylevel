class Solution {
public:
    vector<vector<int>> generate(int numRows) {


    vector<vector<int>>ans;//store the rows of pascal triangle 


    for(int i=0; i<numRows; i++) {// this loop generates each row of pascal's triangle 

        vector<int>row(i+1,1);//For each row i, we create a vector row with i + 1 elements,
        // all initialized to 1. This represents the structure of Pascal's Triangle, 
        //where each row starts and ends with 1.
        
        
         //We use another for-loop to fill in the inner elements of the current row. 
        //This loop starts from 1 and goes up to i - 1 (it skips the first and last element
       // because they are always 1).
       //Each inner element row[j] is computed by adding the two elements directly above it from the
       // previous row (ans[i - 1][j - 1] and ans[i - 1][j]). This follows the property of Pascal's Triangle
       // where each number is the sum of the two numbers directly above it.
        for(int j=1;j<i; j++){
            row[j]=ans[i-1][j-1]+ans[i-1][j];
        }
        ans.push_back(row); //After computing the current row, we add it to the ans 2D vector.
    }  
    return ans; 
    }
};
